@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: True *@
@using System
@using System.Collections.Generic
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@using Hangfire.Dashboard.Resources
@using Hangfire.States;
@inherits RazorPage
@{
    Layout = new LayoutPage(Strings.ScheduledJobsPage_Title);

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);
    string filterString = Query("filterString");
    string filterMethodString = Query("filterMethodString");
    string startDate = Query("startDate");
    string endDate = Query("endDate");
    string startTime = Query("startTime");
    string endTime = Query("endTime");

    var monitor = Storage.GetMonitoringApi();
    var countParameters = new Dictionary<string, string>()
    {
        { "stateName", ScheduledState.StateName },
        { "filterString", filterString },
        { "filterMethodString", filterMethodString },
        { "startDate", startDate },
        { "endDate", endDate },
        { "startTime", startTime },
        { "endTime", endTime }
    };

    var jobCount = monitor.JobCountByStateName(countParameters);
    var pager = new Pager(from, perPage, jobCount)
    {
        JobsFilterText = filterString,
        JobsFilterMethodText = filterMethodString,
        JobsFilterStartDate = startDate,
        JobsFilterEndDate = endDate,
        JobsFilterStartTime = startTime,
        JobsFilterEndTime = endTime
    };

    var scheduledJobs = monitor.ScheduledJobs(pager);
}

<div class="row">
    <div class="col-md-3">
        @Html.JobsSidebar()
    </div>
    <div class="col-md-9">
        <h1 class="page-header">@Strings.ScheduledJobsPage_Title</h1>

        @if (pager.TotalPageCount == 0)
        {
            <div class="alert alert-info">
                @Strings.ScheduledJobsPage_NoJobs
            </div>
        }
        else
        {
            <div class="js-jobs-list">
                <div class="btn-toolbar btn-toolbar-top">
                    <button class="js-jobs-list-command btn btn-sm btn-primary"
                            data-url="@Url.To("/jobs/scheduled/enqueue")"
                            data-loading-text="@Strings.Common_Enqueueing"
                            disabled="disabled">
                        <span class="glyphicon glyphicon-play"></span>
                        @Strings.ScheduledJobsPage_EnqueueNow
                    </button>
                    <button class="js-jobs-list-command btn btn-sm btn-default"
                            data-url="@Url.To("/jobs/scheduled/delete")"
                            data-loading-text="@Strings.Common_Deleting"
                            data-confirm="@Strings.Common_DeleteConfirm"
                            disabled="disabled">
                        <span class="glyphicon glyphicon-remove"></span>
                        @Strings.Common_DeleteSelected
                    </button>
                    @if (EnableSearch == true)
                    { <button data-toggle="collapse" data-target="#advanced-search-bar" class="btn btn-sm btn-success">Advanced Search</button> }
                </div>
                @if (EnableSearch == true)
                {
                    <div id="advanced-search-bar" class="collapse well">
                        <h4 class="advanced-search-header">
                            Advanced Search
                        </h4>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <input type="text" value="" id="filterValueString" class="form-control" placeholder="Search..." />
                                </div>
                                <div class="form-group">
                                    @{
                                        var currentDateTime = DateTime.Now.ToString("dd/MM/yyyy HH:mm");
                                    }
                                    <input id="filterOnDateTime" name="filterOnDateTime" type="checkbox" class="js-jobs-filterOnDateTime-checked" />
                                    <label for="filterOnDateTime">Filter on date time</label>
                                    <div id="datetime-filters" class="row">
                                        <div class="col-xs-6">
                                            <input type="text" value="@currentDateTime" class="datetimeselector-start form-control" id="startDateTime" />
                                        </div>
                                        <div class="col-xs-6">
                                            <input type="text" value="@currentDateTime" class="datetimeselector-end form-control" id="endDateTime" />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <input id="filterOnMethodName" name="filterOnMethodName" type="checkbox" class="js-jobs-filterOnMethodName-checked" />
                                    <label for="filterOnMethodName">Filter on method name</label>
                                    <input type="text" value="" id="filterMethodString" class="form-control" placeholder="Method name..." />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <button class="js-jobs-filter-command btn btn-sm btn-success" data-url="@Url.To("/jobs/scheduled")">
                                    <span class="glyphicon glyphicon-repeat"></span>
                                    Filter jobs
                                </button>
                            </div>
                        </div>
                    </div>
                }

                @Html.PerPageSelector(pager)
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="min-width">
                                    <input type="checkbox" class="js-jobs-list-select-all" />
                                </th>
                                <th class="min-width">@Strings.Common_Id</th>
                                <th>@Strings.ScheduledJobsPage_Table_Enqueue</th>
                                <th>@Strings.Common_Job</th>
                                <th class="align-right">ScheduledJobsPage_Table_Scheduled</th>
                            </tr>
                        </thead>
                        @foreach (var job in scheduledJobs)
                        {
                            <tr class="js-jobs-list-row @(!job.Value.InScheduledState ? " obsolete-data" : null) @(job.Value.InScheduledState ? "hover" : null)">
                                <td>
                                    @if (job.Value.InScheduledState)
                                    {
                                        <input type="checkbox" class="js-jobs-list-checkbox" name="jobs[]" value="@job.Key" />
                                    }
                                </td>
                                <td class="min-width">
                                    @Html.JobIdLink(job.Key)
                                    @if (!job.Value.InScheduledState)
                                    {
                                        <span title="@Strings.Common_JobStateChanged_Text" class="glyphicon glyphicon-question-sign"></span>
                                    }
                                </td>
                                <td class="min-width">
                                    @if (RelativeTime == true)
                                    {
                                        @Html.RelativeTime(job.Value.EnqueueAt);
                                    }
                                    else
                                    {
                                        @Html.Raw(job.Value.EnqueueAt.ToString("dd/MM/yyyy HH:mm"));
                                    }
                                </td>
                                <td class="word-break">
                                    @Html.JobNameLink(job.Key, job.Value.Job)
                                </td>
                                <td class="align-right">
                                    @if (job.Value.ScheduledAt.HasValue)
                                    {
                                        if (RelativeTime == true)
                                        {
                                            @Html.RelativeTime(job.Value.ScheduledAt.Value);
                                        }
                                        else
                                        {
                                            @Html.Raw(job.Value.ScheduledAt.Value.ToString("dd/MM/yyyy HH:mm"));
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </div>

                @Html.Paginator(pager)
            </div>
        }
    </div>
</div>