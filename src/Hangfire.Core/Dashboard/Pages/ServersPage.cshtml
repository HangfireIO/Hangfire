@* Generator: Template TypeVisibility: Internal GeneratePrettyNames: True *@
@using System
@using System.Linq
@using Hangfire.Common
@using Hangfire.Dashboard
@using Hangfire.Dashboard.Pages
@inherits RazorPage
@{
    Layout = new LayoutPage("Servers");
    
    var monitor = Storage.GetMonitoringApi();
    var servers = monitor.Servers();
}

<div class="row">
    <div class="col-md-12">
        <h1 class="page-header">Servers</h1>

        @if (servers.Count == 0)
        {
            <div class="alert alert-warning">
                There are no active servers. Background tasks will not be processed.
            </div>
        }
        else
        {
            <table class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Workers</th>
                    <th>Queues</th>
                    <th>Started</th>
                    <th>Heartbeat</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var server in servers)
                {
                    <tr>
                        <td>@server.Name.ToUpperInvariant()</td>
                        <td>@server.WorkersCount</td>
                        <td>@Html.Raw(String.Join(" ", server.Queues.Select(Html.QueueLabel)))</td>
                        <td data-moment="@JobHelper.ToTimestamp(server.StartedAt)">@server.StartedAt</td>
                        <td>
                            @if (server.Heartbeat.HasValue)
                            {
                                <span data-moment="@JobHelper.ToTimestamp(server.Heartbeat.Value)">
                                        @server.Heartbeat
                                    </span>
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }
    </div>
</div>