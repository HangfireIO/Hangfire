#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.Dashboard.Pages
{
    
    #line 2 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
    using System;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
    using System.Collections.Generic;
    
    #line default
    #line hidden
    using System.Linq;
    using System.Text;
    
    #line 4 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
    using CronExpressionDescriptor;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
    using Hangfire.Dashboard;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
    using Hangfire.Dashboard.Pages;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
    using Hangfire.Storage;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class RecurringJobsPage : RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");









            
            #line 9 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
  
    Layout = new LayoutPage("Recurring jobs");
	List<RecurringJobDto> recurringJobs;
    
    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);

    Pager pager = null;

	using (var connection = Storage.GetConnection())
	{
	    var storageConnection = connection as JobStorageConnection;
	    if (storageConnection != null)
	    {
	        pager = new Pager(from, perPage, storageConnection.GetRecurringJobCount());
	        recurringJobs = storageConnection.GetRecurringJobs(pager.FromRecord, pager.FromRecord + pager.RecordsPerPage - 1);
	    }
	    else
	    {
            recurringJobs = connection.GetRecurringJobs();
	    }
	}


            
            #line default
            #line hidden
WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <h1 class=\"page-header\"" +
">Recurring Jobs</h1>\r\n\r\n");


            
            #line 39 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
         if (recurringJobs.Count == 0)
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"alert alert-info\">\r\n                No recurring jobs fou" +
"nd.\r\n            </div>\r\n");


            
            #line 44 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"js-jobs-list\">\r\n                <div class=\"btn-toolbar b" +
"tn-toolbar-top\">\r\n                    <button class=\"js-jobs-list-command btn bt" +
"n-sm btn-primary\"\r\n                            data-url=\"");


            
            #line 50 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                 Write(Url.To("/recurring/trigger"));

            
            #line default
            #line hidden
WriteLiteral(@"""
                            data-loading-text=""Triggering...""
                            disabled=""disabled"">
                        <span class=""glyphicon glyphicon-play-circle""></span>
                        Trigger now
                    </button>

                    <button class=""js-jobs-list-command btn btn-sm btn-default""
                            data-url=""");


            
            #line 58 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                 Write(Url.To("/recurring/remove"));

            
            #line default
            #line hidden
WriteLiteral(@"""
                            data-loading-text=""Removing...""
                            data-confirm=""Do you really want to REMOVE ALL selected jobs?""
                            disabled=""disabled"">
                        <span class=""glyphicon glyphicon-remove""></span>
                        Remove
                    </button>

");


            
            #line 66 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                     if (pager != null)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral(" ");


            
            #line 68 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                      Write(Html.PerPageSelector(pager));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 69 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral(@"                </div>

                <table class=""table"">
                    <thead>
                    <tr>
                        <th class=""min-width"">
                            <input type=""checkbox"" class=""js-jobs-list-select-all""/>
                        </th>
                        <th class=""min-width"">Id</th>
                        <th class=""min-width"">Cron</th>
                        <th>Time zone</th>
                        <th>Job</th>
                        <th class=""align-right min-width"">Next execution</th>
                        <th class=""align-right min-width"">Last execution</th>
                    </tr>
                    </thead>
                    <tbody>
");


            
            #line 87 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                     foreach (var job in recurringJobs)
                    {

            
            #line default
            #line hidden
WriteLiteral("                        <tr class=\"js-jobs-list-row hover\">\r\n                    " +
"        <td>\r\n                                <input type=\"checkbox\" class=\"js-j" +
"obs-list-checkbox\" name=\"jobs[]\" value=\"");


            
            #line 91 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                                                                                     Write(job.Id);

            
            #line default
            #line hidden
WriteLiteral("\"/>\r\n                            </td>\r\n                            <td class=\"mi" +
"n-width\">");


            
            #line 93 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                             Write(job.Id);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td class=\"min-width\">\r\n                      " +
"          ");



WriteLiteral("\r\n");


            
            #line 96 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                  
                                    var cronDescription = job.Cron;
                                    try
                                    {
                                        cronDescription = ExpressionDescriptor.GetDescription(job.Cron);
                                    }
                                    catch (FormatException)
                                    {
                                    }
                                

            
            #line default
            #line hidden
WriteLiteral("                                ");


            
            #line 106 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                           Write(cronDescription);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                            <td class=\"min-w" +
"idth\">\r\n");


            
            #line 109 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                 if (!String.IsNullOrWhiteSpace(job.TimeZoneId))
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <span title=\"");


            
            #line 111 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                            Write(TimeZoneInfo.FindSystemTimeZoneById(job.TimeZoneId).DisplayName);

            
            #line default
            #line hidden
WriteLiteral("\" data-container=\"body\">");


            
            #line 111 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                                                                                                                    Write(job.TimeZoneId);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n");


            
            #line 112 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    ");

WriteLiteral(" UTC\r\n");


            
            #line 116 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                            <td>\r\n");


            
            #line 119 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                 if (job.Job != null)
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    ");

WriteLiteral(" ");


            
            #line 121 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                  Write(Html.JobName(job.Job));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 122 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <em>");


            
            #line 125 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                   Write(job.LoadException.InnerException.Message);

            
            #line default
            #line hidden
WriteLiteral("</em>\r\n");


            
            #line 126 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                            <td class=\"align-r" +
"ight min-width\">\r\n");


            
            #line 129 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                 if (job.NextExecution != null)
                                {
                                    
            
            #line default
            #line hidden
            
            #line 131 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                               Write(Html.RelativeTime(job.NextExecution.Value));

            
            #line default
            #line hidden
            
            #line 131 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                                                               
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <em>N/A</em>\r\n");


            
            #line 136 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                            <td class=\"align-r" +
"ight min-width\">\r\n");


            
            #line 139 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                 if (job.LastExecution != null)
                                {
                                    if (!String.IsNullOrEmpty(job.LastJobId))
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <a href=\"");


            
            #line 143 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                            Write(Url.JobDetails(job.LastJobId));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                                            <span class=\"label label-default " +
"label-hover\" style=\"");


            
            #line 144 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                                                                            Write(String.Format("background-color: {0};", JobHistoryRenderer.GetForegroundStateColor(job.LastJobState)));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                                                ");


            
            #line 145 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                           Write(Html.RelativeTime(job.LastExecution.Value));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                            </span>\r\n                          " +
"              </a>\r\n");


            
            #line 148 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                    }
                                    else
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <em>\r\n                                   " +
"         Canceled\r\n                                            ");


            
            #line 153 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                       Write(Html.RelativeTime(job.LastExecution.Value));

            
            #line default
            #line hidden
WriteLiteral("\r\n                                        </em>\r\n");


            
            #line 155 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                    }
                                }
                                else
                                {

            
            #line default
            #line hidden
WriteLiteral("                                    <em>N/A</em>\r\n");


            
            #line 160 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                                }

            
            #line default
            #line hidden
WriteLiteral("                            </td>\r\n                        </tr>\r\n");


            
            #line 163 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    </tbody>\r\n                </table>\r\n\r\n");


            
            #line 167 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                 if (pager != null)
                {

            
            #line default
            #line hidden
WriteLiteral("                    ");

WriteLiteral(" ");


            
            #line 169 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                  Write(Html.Paginator(pager));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 170 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </div>\r\n");


            
            #line 172 "..\..\Dashboard\Pages\RecurringJobsPage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n</div>    ");


        }
    }
}
#pragma warning restore 1591
